name: Release (GHCR)

on:
  push:
    tags:
      - 'v*' # np. v1.0.0

permissions:
  contents: read
  packages: write # publikacja do GHCR

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }} # ghcr.io/<owner>/<repo>

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract tag/repo meta
        id: meta
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          echo "TAG=${TAG}" >> $GITHUB_OUTPUT
          REPO_LC="$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')"
          echo "IMAGE=ghcr.io/${REPO_LC}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.TAG }}
            ${{ steps.meta.outputs.IMAGE }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.version=${{ steps.meta.outputs.TAG }}
            org.opencontainers.image.revision=${{ github.sha }}

      # ðŸ“¦ UtwÃ³rz GitHub Release z auto-notatkami (na podstawie PR/commitÃ³w)
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.TAG }}
          name: ${{ steps.meta.outputs.TAG }}
          generate_release_notes: true
          # (opcjonalnie) dodaj body z informacjÄ… o obrazie:
          body: |
            Docker image:
            ```
            docker pull ${{ steps.meta.outputs.IMAGE }}:${{ steps.meta.outputs.TAG }}
            docker pull ${{ steps.meta.outputs.IMAGE }}:latest
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
